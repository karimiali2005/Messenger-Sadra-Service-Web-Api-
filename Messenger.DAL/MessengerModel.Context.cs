//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Messenger.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MessengerContext : DbContext
    {
        public MessengerContext()
            : base("name=MessengerContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<mesCompany> mesCompanies { get; set; }
        public virtual DbSet<mesCompanyUser> mesCompanyUsers { get; set; }
        public virtual DbSet<mesDocument> mesDocuments { get; set; }
        public virtual DbSet<mesDocumentType> mesDocumentTypes { get; set; }
        public virtual DbSet<mesPanel> mesPanels { get; set; }
        public virtual DbSet<mesSetting> mesSettings { get; set; }
        public virtual DbSet<mesStatusMessage> mesStatusMessages { get; set; }
        public virtual DbSet<mesTypeMessage> mesTypeMessages { get; set; }
        public virtual DbSet<mesVersioning> mesVersionings { get; set; }
        public virtual DbSet<mesLogin> mesLogins { get; set; }
        public virtual DbSet<mesMessage> mesMessages { get; set; }
        public virtual DbSet<mesUser> mesUsers { get; set; }
    
        public virtual ObjectResult<mesCompanyChange_Result> mesCompanyChange(Nullable<int> userID, string number, Nullable<System.DateTime> changeDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            var changeDateParameter = changeDate.HasValue ?
                new ObjectParameter("ChangeDate", changeDate) :
                new ObjectParameter("ChangeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mesCompanyChange_Result>("mesCompanyChange", userIDParameter, numberParameter, changeDateParameter);
        }
    
        public virtual ObjectResult<mesMessageShow_Result> mesMessageShow(Nullable<int> companyID, Nullable<int> userID, Nullable<System.DateTime> changeDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var changeDateParameter = changeDate.HasValue ?
                new ObjectParameter("ChangeDate", changeDate) :
                new ObjectParameter("ChangeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mesMessageShow_Result>("mesMessageShow", companyIDParameter, userIDParameter, changeDateParameter);
        }
    
        public virtual ObjectResult<mesStatusMessageChange_Result> mesStatusMessageChange(Nullable<System.DateTime> changeDate)
        {
            var changeDateParameter = changeDate.HasValue ?
                new ObjectParameter("ChangeDate", changeDate) :
                new ObjectParameter("ChangeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mesStatusMessageChange_Result>("mesStatusMessageChange", changeDateParameter);
        }
    
        public virtual ObjectResult<mesTypeMessageChange_Result> mesTypeMessageChange(Nullable<System.DateTime> changeDate)
        {
            var changeDateParameter = changeDate.HasValue ?
                new ObjectParameter("ChangeDate", changeDate) :
                new ObjectParameter("ChangeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mesTypeMessageChange_Result>("mesTypeMessageChange", changeDateParameter);
        }
    
        public virtual int mesCheckOnline(Nullable<int> fkfUser, ObjectParameter isOnline)
        {
            var fkfUserParameter = fkfUser.HasValue ?
                new ObjectParameter("FkfUser", fkfUser) :
                new ObjectParameter("FkfUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mesCheckOnline", fkfUserParameter, isOnline);
        }
    
        public virtual ObjectResult<mesMessageChange_Result> mesMessageChange(Nullable<int> userID, Nullable<System.DateTime> changeDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var changeDateParameter = changeDate.HasValue ?
                new ObjectParameter("ChangeDate", changeDate) :
                new ObjectParameter("ChangeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mesMessageChange_Result>("mesMessageChange", userIDParameter, changeDateParameter);
        }
    }
}
